package services;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

public abstract class DBManager {

	protected static Connection conn = createDatabaseConnection();

	public void startTransaction() throws SQLException {
		conn.setAutoCommit(false);
	}

	public void commitTransaction() throws SQLException {
		conn.commit();
		conn.setAutoCommit(true);
	}

	public void rolbackTransaction() throws SQLException {
		conn.rollback();
		conn.setAutoCommit(true);
	}

	private static Connection createDatabaseConnection() {

		Properties properties = new Properties();
		try {
			properties.load(ClassLoader
					.getSystemResourceAsStream("jdbc.properties"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		String connectionString = properties.getProperty("database.jdbc");
		Connection conn = null;
		try {
			conn = DriverManager.getConnection(connectionString);

			Statement stmt = conn.createStatement();
			boolean customerTableExists = false;
			boolean movieTableExists = false;
			boolean itemTypeTableExists = false;
			boolean historyTableExists = false;

			String clean = properties.getProperty("clean_database");
			if ("true".equals(clean)) {
				stmt.executeUpdate("drop table history if exists");
				stmt.executeUpdate("drop table movie if exists");
				stmt.executeUpdate("drop table item_type if exists");
				stmt.executeUpdate("drop table customer if exists");
			}

			ResultSet rs = conn.getMetaData().getTables(null, null, null, null);

			while (rs.next()) {

				if ("item_type".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					itemTypeTableExists = true;
					continue;
				}
				if ("movie".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					movieTableExists = true;
					continue;
				}
				if ("customer".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					customerTableExists = true;
					continue;
				}
				if ("history".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {					
					historyTableExists = true;
					continue;
				}
			}

			if (!customerTableExists) {
				stmt.executeUpdate(""
						+ "CREATE TABLE customer("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
						+ "name varchar(30)," + "money DECIMAL)");
			}
			if (!itemTypeTableExists) {
				stmt.executeUpdate(""
						+ "CREATE TABLE item_type("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
						+ "name varchar(30))");
			}
			if (!historyTableExists) {
				int executeUpdate = stmt.executeUpdate(""
						+ "CREATE TABLE history(" + "movie_id bigint,"
						+ "customer_id bigint," + "timestamp TIMESTAMP)");
				System.out
						.println("utworzono tabele HISTORY, " + executeUpdate);
			}
			if (!movieTableExists) {
				stmt.executeUpdate(""
						+ "CREATE TABLE movie("
						+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
						+ "director varchar(50)," + "title varchar(50),"
						+ "available BOOLEAN," + "item_type_id bigint,"
						+ "price DECIMAL," + "customer_id bigint,"
						+ "FOREIGN KEY (customer_id) REFERENCES customer(id))");
			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return conn;
	}
}
